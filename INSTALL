Public ADOM Server install directions
See LICENSE for copyright and licensing details

Table of contents:
	I. Setup
		i. Install required tools
		ii. Local users
		iii. passwd.py
		iv. termrec
		v. sudo
		vi. quota
		vii. su to adomown
	II. Install
		viii. Check out code
		ix. Add other ADOM versions
		x. Patch and install ADOM versions; compile wrappers
			a. Patch ADOM
			b. Compile wrappers
			c. Compile Sage
		xi. SSH key for spectating
		xii. crontab
	III. Configuration
		xiii. etc/config
		xiv. Back to root
		xv. Permissions
		xvi. HISCORES
		xvii. Admin SSH key
		xviii. ldconfig
		xix. Web server
	
I. Setup
---------

These instructions are written with a Debian or Ubuntu-based system in mind.
Any relatively modern Linux distribution will work, but Debian 6+ or Ubuntu
12.04+ are recommended.

i. Install required tools
==========================

The following software is required for all pieces to work:

* OpenSSH
* inotify (kernel 2.6.12+)
* quota support and quota tools
* sudo
* screen
* tmux 1.5+
* bsdiff & bspatch
* nano
* ELinks
* ttyrec
* termrec (included)
* Python 2.6+
* Perl (for the database bot)
* PHP (optional, for minor Web page uses)
Python modules for the score announcing bot:
** IRCLib
** Pyinotify
** ConfigObj
** OAuth
** Tweepy
** Passwd (included)
Perl modules for the database bot:
** Bot::BasicBot
** Try::Tiny 
** String::Approx
** Sub::Exporter
** Term::ReadKey
** POE::Component::SSLify 
** Text::LevenshteinXS

On a Debian-based system, the following command, run as root, should bring
in all you need:

apt-get install python-irclib elinks inotify-tools ttyrec quotatool quota\
 libbot-basicbot-perl libtry-tiny-perl libstring-approx-perl\
 libsub-exporter-perl sudo screen bsdiff nano hexcurse libterm-readkey-perl\
 wget python-pyinotify libpoe-component-sslify-perl python-configobj\
 python-oauth git openssh-server openssh-client\
 libtext-levenshteinxs-perl tmux python-tweepy

For compiling binaries from source, or related tools, a compiler and
some development libraries are required:

apt-get install libncurses5-dev libbz2-dev zlib1g-dev gcc g++ make autoconf

If running on a 64-bit system, you will need the 32-bit development libraries
of all the above and libc6 and libstdc++.

Notes:

- Debian Squeeze users will have to build libtext-levenshteinxs-perl tmux and
python-tweepy from source or another source (like Wheezy).

ii. Local Users
================

The following users and group must be set up for full funcationality:

Group adomusers
Users adomown, adom, spectator, and ttyrecplay

Commands:

groupadd adomusers
useradd -d /var/lib/adom -c "ADOM owner" -s /bin/bash -g adomusers adomown
mkdir /var/lib/adom
chown adomown:adomusers /var/lib/adom
useradd -d /var/lib/adom -c "ADOM public login" -s\
 /var/lib/adom/server/public_login adom
useradd -d /var/lib/adom/server/spectator -c "ADOM spectator" -s\
 /var/lib/adom/server/spec_login spectator
useradd -d /var/lib/adom/server/ttyrecplay -c "ADOM TTY playback" -s\
 /var/lib/adom/server/ttyrecplay_login ttyrecplay

For adom, spectator, and ttyrecplay, set passwords the same as their username.
adomown can be given a password or remain locked but the install will require 
a lot of commands to be run as adomown.

Commands:

passwd adom
passwd spectator
passwd ttyrecplay

iii. passwd.py
===============

Install passwd.py (latest can be found at
http://newcenturycomputers.net/projects/passwd.html ).

Commands:

cd /tmp
wget http://newcenturycomputers.net/projects/download.cgi/passwd.py
python passwd.py install

iv. termrec 
============

Install termrec & termplay ( latest at http://angband.pl/termrec.html ).

Commands:

cd /tmp
wget http://prdownloads.sourceforge.net/termrec/termrec-0.16.tar.gz
tar xzf termrec-0.16.tar.gz
cd termrec-0.16/
./configure && make && make install

v. sudo
========

The adom user requires permission to add new users and set their quotas.

Add the following line to /etc/sudoers or /etc/sudoers.d/50-adom
(must be chmod 0440):

adom    ALL = NOPASSWD: /usr/sbin/adduser, /usr/sbin/setquota

Commands:

echo "adom    ALL = NOPASSWD: /usr/sbin/adduser, /usr/sbin/setquota"\
 > /etc/sudoers.d/50-adom
chmod 0440 /etc/sudoers.d/50-adom

vi. quota
==========

Quota support should be added to prevent a user from filling up the disk.
ttyrecs take a LOT of space.

Edit /etc/fstab and add the following to the filesystem options: 

relatime,errors=remount-ro,usrquota,usrjquota=aquota.user,jqfmt=vfsv0

Then run commands:

mount -o remount,usrquota /
quotacheck -avugm 
quotaon -a

vii. su to adomown
===================

The next steps should be done as the adomown user.  You'll be told when
it's time to return to root.

Run:

su - adomown
or
sudo -u adomown bash

II. Install
------------

This section should be done as the non-root user you set up for this, e.g.
adomown.

viii. Check out code
=====================

Pick a directory (for now, this must be /var/lib/adom) and finally, check out 
the code:

git clone https://github.com/AlucardZero/adom-server.git .

ix. Add other ADOM versions
============================

Download any desired additional ADOM game versions.  Versions 1.0.0, 1.1.1, and
1.2.0p3 are included, in the same way as from ancardia.com (due to the license),
but 1.2.0 prereleases 4 to last cannot be distributed this way.  You must have
donated to the ADOM Resurrection IndieGoGo campaign to download and play them.
 
Where you have a choice, get the Debian 32-bit version, as that is what Sage 
supports.

Place the archives, just as you downloaded them, in /var/lib/adom/software/ .

x. Patch and install ADOM versions
===================================

A wrapper binary is used to make some decisions and add some features and must
be compiled.

Also, a binary that facilitates message sending, and opens the door to the Bug
Temple, must be compiled.

Small changes to the distributed ADOM binaries are required to separate HISCORE
files. Binary patch files for several versions are provided. To do manually, 
edit the adom binary in a hex editor (like hexcurse) and change both mentions 
of adom_ds.cfg to something unique. Then create this file in /etc with contents the directory the .HISCORE file should be.

I have used:

1.0.0           adom_ds.100
1.1.1           adom_ds.111
Eternium Man:   adom_ds.etr
League:         adom_ds.lea
Swapgame:       adom_ds.swp
1.2.0p1-3:      adom_ds.12a
1.2.0p4-5:      adom_ds.12b
1.2.0p6-?:      adom_ds.12c

Finally, Sage should be checked out and compiled.

a. Patch ADOM
++++++++++++++

Patch the binaries with the following commands:

mkdir /tmp/adom && cd $_

for i in 100 111; do
tar xzf /var/lib/adom/software/adom-$i-elf.tar.gz &&
bspatch adom/adom /var/lib/adom/bin/adom-$i-bin\
 /var/lib/adom/software/adom-$i-ds.binpatch
rm -rf ./adom
done

tar xzf /var/lib/adom/software/adom-111-elf.tar.gz
for i in lea etr swp; do
bspatch adom/adom /var/lib/adom/bin/adom-$i-bin\
 /var/lib/adom/software/adom-$i-ds.binpatch
done
rm -rf adom

for i in 3 4 5 6; do
tar xzf /var/lib/adom/software/adom_linux_debian_32_1.2.0_pre$i.tar.gz &&
bspatch adom/adom /var/lib/adom/bin/adom-120p$i-bin\
 /var/lib/adom/software/adom-120p$i-ds.binpatch
rm -rf ./adom
done

These are the md5sums of the resulting binaries:

2e870f9207c08e736d2e2a81ae1f7098  adom-100-bin
c7d6813e48cf19c163ac1a6eba8122ee  adom-111-bin
d95a75aa104dd306833ff3207ef022ed  adom-120p3-bin
43dd575a1196def002ee50d45cc4afa3  adom-120p4-bin
11d27e4466b94e1667916296178785d9  adom-120p5-bin
ec0100d0cf56c910916c7bdbfa2c2887  adom-120p6-bin
a2dc057b464a6ac6922772c705043346  adom-etr-bin
979e65fce3f6f67e093d9f95c4209720  adom-lea-bin
3128f86a6900e99e3ba0ec40b98e31d9  adom-swp-bin

b. Compile wrappers
++++++++++++++++++++

The wrapper binaries decide whether to use Sage or not, and help announce
when players enter significant locations.

cd /var/lib/adom
for i in 100 111 120p3 120p4 120p5 120p6; do
  gcc -m32 -DADOM_$i -Wall src/adom-wrapper.c -o bin/adom-$i
done

Compile message dispatcher:
gcc -m32 src/message_dispatch.c -o bin/message_dispatch
Compile the bug temple entrance:
gcc -m32 src/modify_cnt.c -o bin/modify_cnt

c. Compile Sage
+++++++++++++++

Run the following commands to compile and install Sage.  Replace the value for 
TAG if there is a newer released version.

TAG="0.9.3"
git submodule init
git submodule update
cd sage
git fetch --tags
git checkout master
git pull
git checkout ${TAG}
make
cp adom-sage ../bin/adom-sage-${TAG}
cp adom-sage.so ../bin/adom-sage-${TAG}.so
cd ..

xi. SSH key for spectating
===========================

Generate an ssh key for spectating from the user menu. Don't add a passphrase.

ssh-keygen -t rsa -b 2048 -C "Pubkey for ADOMers to spectate" -f\
 /var/lib/adom/etc/adomusers_key

cat /var/lib/adom/etc/adomusers_key.pub >>\
 /var/lib/adom/server/spectator/.ssh/authorized_keys
cat /var/lib/adom/etc/adomusers_key.pub >>\
 /var/lib/adom/server/ttyrecplay/.ssh/authorized_keys

xii. crontab
=============

Add the contents of etc/crontab to adomown's crontab.

Command:

crontab -u adomown etc/crontab

III. Configure
---------------

xiii. etc/config 
=================

Edit etc/config and fill in the values.

The SERVNAME field is the domain name of the server, through which HTTP access
will be available, like adom.example.com or ancardia.us.to.

The prerelease section defines the minimum and maximum 1.2.0p versions 
supported. 

The twitter section is for announcing scores on Twitter. Sign up for a Twitter
account then enable API access and generate and find the access and consumer
tokens.
See https://dev.twitter.com/docs/auth/tokens-devtwittercom for help generating.

The donation section is for enabling 1.2.0 prerelease 4-last for people who 
donated to the ADOM Resurrection IndieGoGo campaign.  Obviously, you have to
have donated to fill them in, but they cannot be provided or distributed.

xiv. Back to root
==================

The rest of the steps should be done as root.

xv. Permissions
================

Git does not store permissions besides the executable bit, so some work is
needed to allow multiple users to play on the server.

** NOTE ON SETUID **
Spectating requires 'screen' to be suid root, this makes sure that is set.
However, you may think this is a security risk.  But if you don't set it,
spectating (which uses the multi-user feature of screen) won't work.  By
setting this you are basically trusting screen not to have any bugs an
attacker could use to take over the system.
The message_dispatch binary also must be setuid root for sending messages to
other players to work.  This is a simple program whose source is in src/.

Commands:

cd /var/lib/adom
# for playing
chgrp adomusers public_html/adom_users/ tmp/sockets
chmod 1775 public_html/adom_users/ tmp/sockets
# for running, be sure
chmod ugo+x bin/*
# for scoring
cd var
chgrp adomusers 1* etr lea swapgame 1*/.HISCORE etr/.HISCORE lea/.HISCORE\
 swapgame/.HISCORE
chmod 775 1* etr lea swapgame
chmod 664 */.HISCORE
cd ..
chmod 1777 /var/lib/adom/tmp/
# for announcing locs
chmod 1775 /var/lib/adom/tmp/player_locations
# for spectating
chmod u+s `which screen`
chmod 755 /var/run/screen/
# for messaging
chgrp adomusers /var/lib/adom/var/log/messages_sent
chmod 664 /var/lib/adom/var/log/messages_sent
chown root:adomusers /var/lib/adom/bin/message_dispatch
chmod 4710 /var/lib/adom/bin/message_dispatch
# for keys
chmod 600 /var/lib/adom/server/spectator/.ssh/authorized_keys\
 /var/lib/adom/server/ttyrecplay/.ssh/authorized_keys
chmod 700 /var/lib/adom/server/spectator/.ssh\
 /var/lib/adom/server/ttyrecplay/.ssh
chown -R spectator /var/lib/adom/server/spectator
chown -R ttyrecplay /var/lib/adom/server/ttyrecplay
chmod 660 /var/lib/adom/etc/adomusers_key

xvi. HISCORES
==============

To tell ADOM where to put its .HISCORE files for all, copy server/etc/adom_ds* 
to /etc/:

cp etc/adom_ds* /etc/

xvii. Admin SSH key
====================

(Optional) Add the administrator's SSH public key to 
/var/lib/adom/etc/skel/.ssh/authorized_keys to let him or her SSH in as any 
created user, to see their issues or shut down their games (say when you want 
to reboot).

xviii. ldconfig
================

"ldconfig" may need to be run if a package was installed from source
(I had to when I installed tmux)

xix. Web server
================

A Web server should be set up to provide the readme and display hi
scores and allow users to (optionally) download their files.  Setting up the
server itself is out of scope for this document.

A public_html folder is provided, and should be set as the Web server's
document root, or linked in to its tree.

If PHP is enabled on the Web server, edit the top of public_html/index.php
with the name and other details of the server, and remove index.html.

Alternately, edit the static index.html and remove index.php.

To serve up ADOM's text files in a browser, the MIME types of some file 
extensions should be touched. Specifically, the following types would benefit 
from being sent as text/plain:
  flg ssh slg kbd cfg msg vlg
And the following would benefit from being sent as application/octet-stream:
  svg
