#!/bin/bash --login

export LESSSECURE=1

EXPECTED_ARGS=0

if [ $# -ne $EXPECTED_ARGS ]; then
	exit
fi

command=""
sage=$(cat ${HOME}/sage_status)
adom_ver=$(cat ${HOME}/adom_ver)
ttyq=$(cat ${HOME}/ttyrec_status)

if [ ! -e "${HOME}/.adom.data" ]; then
	ln -s ${HOME}/adom.data-$adom_ver ${HOME}/.adom.data
fi

until [ "$command" = "end" ]
do
	sage=$(cat ${HOME}/sage_status)
	adom_ver=$(cat ${HOME}/adom_ver)
	ttyq=$(cat ${HOME}/ttyrec_status)

	tput reset
	clear

	echo "Welcome to the Ancardia ADoM server! All games are recorded! View the"
	echo "readme before playing; solutions to most problems can be found there."

	echo ""

	python /var/lib/adom/server/check_term.py
	res="$?"

	if [ "$res" == "1" ]; then
		echo ""
	fi

	quota -slq > /dev/null
        if [ $? == 1 ]; then
		echo -e " ** \033[1;31mWARNING: You are over your disk quota. Please type 'del'. \033[0m**"
        fi

	printf "You're about to play ADoM"
	if [ "$adom_ver" = "111" ]; then
		echo " version 1.1.1, normal mode"
	elif [ "$adom_ver" = "100" ]; then
		echo " version 1.0.0, normal mode"
	elif [ "$adom_ver" = "etr" ]; then
		echo " version 1.1.1, eternium man challenge mode"
	elif [ "$adom_ver" = "swp" ]; then
		echo " version 1.1.1, swapgame mode"
	fi

	if [ -e ${HOME}/silence ]; then
		printf "without spectator messages"
	else
		printf "with spectator messages"
	fi

	echo -ne "with ADoM Sage \e[4m$sage\e[0m,"
        echo -e " and tty recordings \033[4m$ttyq\033[0m."

	if [[ $(date +%w) = 1 ]] ; then
                echo -e "     \033[4mNOTE\033[0m: It's Monday.";
	elif [[ $(date +%w-%d) = "5-13" ]]; then
                echo -e "     \033[4mNOTE\033[0m: It's Friday the 13th.";
        fi

	if [[ $(date +%m-%d) = "07-2" ]]; then
                echo -e "     \033[4mNOTE\033[0m: It's Creator's Day."
	elif [[ $(date +%m-%d) = "12-24" ]]; then
                echo -e "     \033[4mNOTE\033[0m: It's Christmas Eve."
	elif [[ $(date +%m-%d) = "12-31" ]]; then
                echo -e "     \033[4mNOTE\033[0m: It's New Year's Eve."
        fi

	echo ""
	echo "h - view the readme (press 'q' to return)"
	echo ""
	echo "a - launch ADoM, start or resume a single-player game"
	echo "j - join current user's running ADoM session (aka. co-op)"
	echo "s - spectate other users' games"
	echo "q - quit"
	echo ""
	echo "mn, ma, me, ms - enable 1.1.1, 1.0.0, Eternium Challenge or Swapgame"
	echo "                 mode, respectively"
	echo ""
	echo "t - send messages to another user"
	if [ -e ${HOME}/silence ]; then
		echo -n "m - enable"
	else
		echo -n "m - disable"
	fi
	echo " receiving messages sent by other users"

	if [ -e "/var/lib/adom/public_html/adom_users/${USER}" ]; then
		printf "d - disable"
	else
		printf "d - enable"
	fi
	echo " user directory access at http://ancardia.ath.cx/adom_users/${USER}"
	echo "x - toggle ADoM Sage"
	echo -e "\033[1m[ r ]\033[0m toggle tty recording"
	echo "c - edit ADoM, ADoM Sage and SSH key (RSA/DSA) configurations"
	echo "kp - kill all user processes (if stuck) and give debug info"
	echo -e "\033[1m[ del ]\033[0m delete all your ttyrecs, slgs, vlgs, & sshs, (with confirmation)"
	echo "pw - change your password"

	printf "> "

	read command
	case $command in
	'h')
		less /var/lib/adom/public_html/adom_server_info.txt
		continue
		;;

	'a')
		clear

		python /var/lib/adom/server/check_term.py
		res="$?"

		if [ "$res" == "1" ]; then
			echo ""
			echo "Press enter to return to the main menu."
			read junk
			continue
		fi

		export sage
		export adom_ver
		export ttyq
		touch /var/lib/adom/sockets/$USER

		if [ -e "${HOME}/.adom.data/.adom.cnt" ]; then
			/var/lib/adom/server/modify_cnt "${HOME}/.adom.data/.adom.cnt"
		fi

		screen -DR -c /var/lib/adom/server/user-screen -S adom -s \
		"/var/lib/adom/server/adom_wrapper"
		rm -f /var/lib/adom/sockets/$USER
		continue
		;;

	"mn")
		if [ -e "${HOME}/.adom.data/.adom.prc" ]; then
			echo "Cannot change version; ADoM is running!"
			sleep 2
			continue
		fi

		rm -f ${HOME}/.adom.data
		adom_ver="111"
		echo "$adom_ver" > ${HOME}/adom_ver
		ln -s ${HOME}/adom.data-$adom_ver ${HOME}/.adom.data
		continue
		;;

	"ma")
				if [ -e "${HOME}/.adom.data/.adom.prc" ]; then
			echo "Cannot change version; ADoM is running!"
			sleep 2
			continue
		fi

		rm -f ${HOME}/.adom.data
		adom_ver="100"
		echo "$adom_ver" > ${HOME}/adom_ver
				ln -s ${HOME}/adom.data-$adom_ver ${HOME}/.adom.data
		continue
				;;

	"me")
				if [ -e "${HOME}/.adom.data/.adom.prc" ]; then
			echo "Cannot change version; ADoM is running!"
			sleep 2
			continue
		fi

		rm -f ${HOME}/.adom.data
		adom_ver="etr"
		echo "$adom_ver" > ${HOME}/adom_ver
				ln -s ${HOME}/adom.data-$adom_ver ${HOME}/.adom.data
		continue
				;;

	"ms")
				if [ -e "${HOME}/.adom.data/.adom.prc" ]; then
					echo "Cannot change version; ADoM is running!"
					sleep 2
					continue
				fi

				rm -f ${HOME}/.adom.data
				adom_ver="swp"
				echo "$adom_ver" > ${HOME}/adom_ver
				ln -s ${HOME}/adom.data-$adom_ver ${HOME}/.adom.data
				continue
				;;

	'm')
		if [ -e ${HOME}/silence ]; then
			rm ${HOME}/silence
		else
			> ${HOME}/silence
		fi
		continue
		;;

	'x')
		if [ "$sage" = "disabled" ]; then
			echo "enabled" > ${HOME}/sage_status
		else
			echo "disabled" > ${HOME}/sage_status
		fi
		continue
		;;

        'r')
                if [ "$ttyq" = "disabled" ]; then
                        echo "enabled" > ${HOME}/ttyrec_status
                else
                        echo "disabled" > ${HOME}/ttyrec_status
                fi
                continue
                ;;

        'del')
                OLDSZ=$(du -shx $HOME | cut -f1)
                echo -e "Your homedir usage is $OLDSZ. Delete ALL your ttyrecs, vlgs, slgs, and .sshs?\n(y/N)?"
                read ANSWER
                if [[ $ANSWER = [yY]* ]]; then
                        find $HOME/ttyrecs -type f -delete -print
                        find $HOME -type f -name "*.ssh" -delete -print
                        find $HOME -type f -name "*.slg" -delete -print
                        find $HOME -type f -name "*.vlg" -delete -print
                        find $HOME -type f -name "core" -delete -print
                fi
                NEWSZ=$(du -shx $HOME | cut -f1)
                echo "Your new disk usage is $NEWSZ. (press enter)"
                read
                continue
                ;;

	'c')
		/var/lib/adom/server/conf_adom
		echo
		sleep 1
		continue
		;;

	'pw')
		passwd
		sleep 1
		continue
		;;

	'kp')
		clear
		rm -f /var/lib/adom/sockets/$USER
		python -u /var/lib/adom/server/irc_msg_kill.py
		continue
		;;

	'd')
		if [ -e "/var/lib/adom/public_html/adom_users/${USER}" ]; then
			rm "/var/lib/adom/public_html/adom_users/${USER}"
			echo "Directory link removed."
		else
			ln -s "${HOME}" "/var/lib/adom/public_html/adom_users/${USER}"
			echo "Directory link created."
		fi

		sleep 1
		continue
		;;

	'q')
		exit
		;;

	'e')
		exit
		;;

	'j')
		clear

		python /var/lib/adom/server/check_term.py
		res="$?"

		if [ "$res" == "1" ]; then
			echo ""
			echo "Press enter to return to the main menu."
			read junk
			continue
		fi

		screen -x -c /var/lib/adom/server/user-screen
		continue
		;;

	's')
		ssh -o "StrictHostKeyChecking no" -i /var/lib/adom/adomusers_id  spectator@localhost
		continue
		;;

	't')
		/var/lib/adom/server/talk_at
		continue
		;;

	*)
		echo "Erroneous selection!"
		sleep 1
		continue
		;;
	esac
done
